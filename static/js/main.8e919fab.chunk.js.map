{"version":3,"sources":["App.js","index.js"],"names":["DateDiff","d1","d2","t2","getTime","t1","days","parseInt","hours","minutes","getFullYear","App","start","Date","end","useState","now","setNow","updateNow","formatDHMS","dhms","useEffect","saver","setInterval","clearInterval","className","style","width","toString","height","float","color","backgroundColor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAIMA,EAqBI,SAASC,EAAIC,GACnB,IAAIC,EAAKD,EAAGE,UACRC,EAAKJ,EAAGG,UACRE,EAAOC,UAAUJ,EAAKE,GAAN,OAChBG,EAAQD,UAAWJ,EAAKE,EAAU,MAAJC,GAAb,MACjBG,EAAUF,UAAWJ,EAAKE,EAAU,MAAJC,EAA6B,KAALE,GAArC,KAEvB,MAAO,CAACF,EAAME,EAAOC,EADPF,UAAWJ,EAAKE,EAAU,MAAJC,EAA6B,KAALE,EAA6B,IAAPC,GAAwB,OA3BxGT,EA0CK,SAASC,EAAIC,GACpB,OAAOA,EAAGQ,cAAcT,EAAGS,eAuDhBC,MAnDf,WAEE,IAAIC,EAAQ,IAAIC,KAAK,KAAM,EAAG,IAC1BC,EAAM,IAAID,KAAK,KAAW,EAAG,IAHpB,EAKSE,mBAAS,IAAIF,MALtB,mBAKNG,EALM,KAKDC,EALC,KAeb,SAASC,IACPD,EAAO,IAAIJ,MAGb,SAASM,EAAWC,GAClB,OAAOA,EAAK,GAAK,SAAWA,EAAK,GAAK,IAAMA,EAAK,GAAK,IAAMA,EAAK,GAGnE,OAfAC,qBAAU,WACR,IAAMC,EAAQC,YAAYL,EAAW,KACrC,OAAO,WACLM,cAAcF,OAahB,sBAAKG,UAAU,MAAf,UACE,sBAAKA,UAAU,wBAAwBC,MAAO,CAC5CC,OAAQ,KAAOX,EAAMJ,IAAUE,EAAMF,IAAQgB,WAAa,IAC1DC,OAAQ,OACRC,MAAO,OACPC,MAAO,QACPC,gBAAiB,SALnB,UAOGhC,EAAiBY,EAAOI,GAP3B,SAQE,uBACCG,EAAWnB,EAAgBY,EAAOI,OAErC,sBAAKS,UAAU,wBAAwBC,MAAO,CAC5CC,OAAQ,KAAOb,EAAME,IAAQF,EAAMF,IAAQgB,WAAa,IACxDC,OAAQ,OACRC,MAAO,QACPC,MAAO,QACPC,gBAAiB,SALnB,UAOGhC,EAAiBgB,EAAKF,GAPzB,SAQE,uBACCK,EAAWnB,EAAgBgB,EAAKF,WC3FzCmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.8e919fab.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\n\n// data diff object\nconst DateDiff = {\n  inSeconds: function(d1, d2) {\n    var t2 = d2.getTime();\n    var t1 = d1.getTime();\n    return parseInt((t2-t1)/(1000));\n  },\n  inMinutes: function(d1, d2) {\n    var t2 = d2.getTime();\n    var t1 = d1.getTime();\n    return parseInt((t2-t1)/(60*1000));\n  },\n  inHours: function(d1, d2) {\n    var t2 = d2.getTime();\n    var t1 = d1.getTime();\n    return parseInt((t2-t1)/(3600*1000));\n  },\n  inDays: function(d1, d2) {\n    var t2 = d2.getTime();\n    var t1 = d1.getTime();\n    return parseInt((t2-t1)/(24*3600*1000));\n  },\n  inDHMS: function(d1, d2) {\n    var t2 = d2.getTime();\n    var t1 = d1.getTime();\n    var days = parseInt((t2 - t1) / (24*3600*1000));\n    var hours = parseInt(((t2 - t1) - days * (24*3600*1000)) / (3600*1000));\n    var minutes = parseInt(((t2 - t1) - days * (24*3600*1000) - hours * (3600*1000)) / (60*1000));\n    var seconds = parseInt(((t2 - t1) - days * (24*3600*1000) - hours * (3600*1000) - minutes * (60*1000)) / (1000));\n    return [days, hours, minutes, seconds];\n  },\n  inWeeks: function(d1, d2) {\n    var t2 = d2.getTime();\n    var t1 = d1.getTime();\n    return parseInt((t2-t1)/(24*3600*1000*7));\n  },\n  inMonths: function(d1, d2) {\n    var d1Y = d1.getFullYear();\n    var d2Y = d2.getFullYear();\n    var d1M = d1.getMonth();\n    var d2M = d2.getMonth();\n    return (d2M+12*d2Y)-(d1M+12*d1Y);\n  },\n  inYears: function(d1, d2) {\n    return d2.getFullYear()-d1.getFullYear();\n  }\n}\n\nfunction App() {\n  \n  var start = new Date(1999, 1, 21);\n  var end = new Date(1999 + 80, 1, 21);\n\n  const [now, setNow] = useState(new Date());\n\n  // update every second\n  useEffect(() => {\n    const saver = setInterval(updateNow, 1000);\n    return () => {\n      clearInterval(saver);\n    };\n  });\n\n  function updateNow() {\n    setNow(new Date());\n  }\n\n  function formatDHMS(dhms) {\n    return dhms[0] + ' days ' + dhms[1] + ':' + dhms[2] + ':' + dhms[3];\n  }\n    \n  return (\n    <div className=\"App\">\n      <div className=\"centered unselectable\" style={{\n        width: (100 * (now - start) / (end - start)).toString() + '%', \n        height: \"100%\", \n        float: \"left\", \n        color: \"black\",\n        backgroundColor: \"white\"}}\n        >\n        {DateDiff.inYears(start, now)} years\n        <br/>\n        {formatDHMS(DateDiff.inDHMS(start, now))}\n      </div>\n      <div className=\"centered unselectable\" style={{\n        width: (100 * (end - now) / (end - start)).toString() + '%', \n        height: \"100%\", \n        float: \"right\", \n        color: \"white\",\n        backgroundColor: \"black\"}}\n        >\n        {DateDiff.inYears(now, end)} years\n        <br/>\n        {formatDHMS(DateDiff.inDHMS(now, end))}\n      </div>      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}